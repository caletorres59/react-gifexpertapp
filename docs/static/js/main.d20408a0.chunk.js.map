{"version":3,"sources":["components/AddCategory.js","components/ItemGif.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","ItemGif","gif","title","url","className","src","alt","GetGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","element","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEM,sBAAMC,SAVS,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMhB,SACA,uBACMO,KAAK,OACLC,YAAY,wBACZC,MAAQV,EACRW,SAnBe,SAACR,GACxBF,EAAcE,EAAES,OAAOF,aCNlBG,EAAU,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACfC,EAAcD,EAAdC,MAAOC,EAAOF,EAAPE,IACd,OACK,qBAAIC,UAAU,2DAAd,UACI,6BAAKF,IACL,qBAAKG,IAAKF,EAAMG,IAAKJ,Q,uBCNjBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0DAC4CO,UAAUF,GADtD,sDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAYbY,GAZa,4CAAH,sDCEXM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACvB,ECDyB,SAACA,GAEzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdIC,qBAAW,WACPlB,EAAQC,GAAUkB,MAAK,SAAAP,GACnBQ,YAAW,WACPH,EAAS,CACLV,KAAMK,EACNG,SAAS,MAEd,UAGR,CAAEd,IAIFe,EDpBsBK,CAAapB,GAA/BW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QACnB,OACI,gCACI,6BAAKd,IAEDc,GAAW,yCAGf,oBAAIlB,UAAU,aAAd,SAGQe,EAAOH,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAsBhB,IAAKgB,GAAbA,EAAIC,aEczCW,EAxBQ,WAGnB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ6C,EAAWd,KAAI,SAAAe,GAAO,OACrB,cAAC,EAAD,CAASvB,SAAUuB,GACLA,Y,MChBnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d20408a0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChangue = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n       \r\n          <form onSubmit={handleSubmit}>\r\n          <input \r\n                type=\"text\" \r\n                placeholder=\"AÃ±adir un elemento\"\r\n                value={ inputValue }\r\n                onChange={handleInputChangue}\r\n\r\n           />\r\n          </form>\r\n          \r\n        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const ItemGif = ({ gif }) => {\r\n    const {title, url} = gif;\r\n    return (\r\n         <li className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n             <h4>{title}</h4>\r\n             <img src={url}  alt={title} />\r\n         </li>\r\n            \r\n         \r\n    );\r\n}\r\n","\r\n    export const GetGifs = async (category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=1XPLimuUpv8FyhMpf9SIZD1Spvhpgw4Y`;\r\n        const resp = await fetch(url );\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n\r\n            }\r\n        })\r\n       return gifs;\r\n\r\n    }","import React from 'react'\r\nimport { ItemGif } from './ItemGif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nexport const GifGrid = ({ category }) => {\r\n   const {data:images, loading}= useFetchGifs(category); \r\n    return (\r\n        <div>\r\n            <h3>{category}</h3>\r\n            {\r\n                loading && <p>Cargando</p> \r\n            }\r\n\r\n            <ul className=\"list-gifts\">\r\n\r\n                {\r\n                    images.map(img => <ItemGif key={img.id} gif={img} />)\r\n                }\r\n            </ul>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react';\r\nimport { GetGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n        useEffect( () => {\r\n            GetGifs(category).then(images => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: images,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n               \r\n            })\r\n        }, [ category ]);\r\n\r\n   \r\n\r\n    return state;\r\n}","import {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst  GifExpertApp  = () => {\r\n    //const categories = ['One Punch', 'Samurai x', 'Dragon Ball' ];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleAdd = (e) =>{\r\n    //    // setCategories([...categories,'Xmen']);\r\n    //    //callback\r\n    //    setCategories(cats => [...cats, 'Xmen']);\r\n    // }\r\n    return ( \r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map(element => \r\n                    (<GifGrid category={element} \r\n                              key={element}/>))\r\n                }\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}